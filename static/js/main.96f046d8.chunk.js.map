{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isErrorTitle","setIsErrorTitle","isErrorDescription","setIsErrorDescription","isErrorImgUrl","setIsErrorImgUrl","isErrorImdbUrl","setIsErrorImdbUrl","isErrorImdbId","setIsErrorImdbId","onSubmit","event","preventDefault","trim","window","scrollTo","document","documentElement","clientHeight","name","type","placeholder","pattern","minLength","value","onChange","target","App","moviesFromServer","setMovies","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.96f046d8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [isErrorTitle, setIsErrorTitle] = useState<string | null>(null);\n  const [\n    isErrorDescription, setIsErrorDescription,\n  ] = useState<string | null>(null);\n  const [isErrorImgUrl, setIsErrorImgUrl] = useState<string | null>(null);\n  const [isErrorImdbUrl, setIsErrorImdbUrl] = useState<string | null>(null);\n  const [isErrorImdbId, setIsErrorImdbId] = useState<string | null>(null);\n\n  const validateMessage = () => {\n    if (!title.trim()) {\n      setIsErrorTitle('Please enter the title!');\n    }\n\n    if (!description.trim()) {\n      setIsErrorDescription('Please enter the description!');\n    }\n\n    if (!imgUrl) {\n      setIsErrorImgUrl('Please enter imgUrl!');\n    }\n\n    if (!imdbUrl) {\n      setIsErrorImdbUrl('Please enter imdbUrl!');\n    }\n\n    if (!imdbId) {\n      setIsErrorImdbId('Please enter imdbId!');\n    }\n\n    if (!title.trim() || !description.trim()\n      || !imgUrl || !imdbUrl || !imdbId) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const onSubmitted = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (validateMessage()) {\n      const addedMovie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      addMovie(addedMovie);\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n\n      window.scrollTo(0, document.documentElement.clientHeight);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={onSubmitted}\n      name=\"addMovie\"\n    >\n      <h2 className=\"form__title\">Add new movie</h2>\n      <label>\n        {isErrorTitle\n          && <div className=\"form__error\">{isErrorTitle}</div>}\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Movie title\"\n          pattern=\"^[a-zA-Z]+$\"\n          minLength={3}\n          className=\"form__input\"\n          value={title}\n          onChange={event => {\n            setTitle(event.target.value);\n            setIsErrorTitle(null);\n          }}\n        />\n      </label>\n      <label>\n        {isErrorDescription\n            && <div className=\"form__error\">{isErrorDescription}</div>}\n        <textarea\n          name=\"description\"\n          placeholder=\"Description\"\n          className=\"form__input\"\n          value={description}\n          onChange={event => {\n            setDescription(event.target.value);\n            setIsErrorDescription(null);\n          }}\n        />\n      </label>\n      <label>\n        {isErrorImgUrl\n            && <div className=\"form__error\">{isErrorImgUrl}</div>}\n        <input\n          type=\"url\"\n          name=\"imgUrl\"\n          placeholder=\"ImgUrl\"\n          className=\"form__input\"\n          value={imgUrl}\n          onChange={event => {\n            setImgUrl(event.target.value);\n            setIsErrorImgUrl(null);\n          }}\n        />\n      </label>\n      <label>\n        {isErrorImdbUrl\n            && <div className=\"form__error\">{isErrorImdbUrl}</div>}\n        <input\n          type=\"url\"\n          placeholder=\"ImdbUrl\"\n          className=\"form__input\"\n          value={imdbUrl}\n          onChange={event => {\n            setImdbUrl(event.target.value);\n            setIsErrorImdbUrl(null);\n          }}\n        />\n      </label>\n      <label>\n        {isErrorImdbId\n            && <div className=\"form__error\">{isErrorImdbId}</div>}\n        <input\n          type=\"text\"\n          placeholder=\"ImdbId\"\n          className=\"form__input form__input-lst-chld\"\n          value={imdbId}\n          onChange={event => {\n            setImdbId(event.target.value);\n            setIsErrorImdbId(null);\n          }}\n        />\n      </label>\n\n      <button\n        type=\"submit\"\n        className=\"form__button\"\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC<{}> = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}